import streamlit as st
import numpy as np 
import pandas as pd 

import tensorflow as tf

import matplotlib.pyplot as plt


from sklearn.model_selection import train_test_split

# Data normalization
from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
st.title("Intelligent malware analysis")
file = st.file_uploader("Choose a CSV file", type=["csv"])

if file is not None:
    # Read the uploaded CSV file into a DataFrame
    df = pd.read_csv(file)
    
    # Display the DataFrame
    # st.write("Uploaded CSV file:")
    # st.dataframe(df)
    loaded_model = tf.keras.models.load_model('model')
    
    d = df.drop(["hash","classification",'vm_truncate_count','shared_vm','exec_vm','nvcsw','maj_flt','utime'],axis=1)
    for col in d.columns:
        # d[col] = d[col].str.replace(',', '').astype(float)
        # st.dataframe()
        st.write(type(d[col]))
    # data=scaler.fit_transform(d)
    # st.write(data)
    # predictions = loaded_model.predict(data)
    # predicted_classes = np.argmax(predictions, axis=-1)
    # pred=["Malware" if value == 1 else "Not malware" for value in predicted_classes]
    # st.write(pred[0])
    # st.write(d)
