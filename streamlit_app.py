import streamlit as st
import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)

import tensorflow as tf

import matplotlib.pyplot as plt


from sklearn.model_selection import train_test_split

# Data normalization
from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
st.title("Malware dector")
file = st.file_uploader("Choose a CSV file", type=["csv"])

if file is not None:
    # Read the uploaded CSV file into a DataFrame
    df = pd.read_csv(file)
    
    # Display the DataFrame
    # st.write("Uploaded CSV file:")
    # st.dataframe(df)
    loaded_model = tf.keras.models.load_model('model')
    
    d= df.drop(["hash","classification",'vm_truncate_count','shared_vm','exec_vm','nvcsw','maj_flt','utime'],axis=1)
    scaler = StandardScaler()
    scaled_data = scaler.fit_transform(d)
    scaled_df = pd.DataFrame(scaled_data, columns=df.columns)
    # predictions = loaded_model.predict(data)
    # predicted_classes = np.argmax(predictions, axis=-1)
    # pred=["malware" if value == 1 else "not malware" for value in predicted_classes]
    # st.write(pred)
